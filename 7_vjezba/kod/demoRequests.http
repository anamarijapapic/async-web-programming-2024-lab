@hostname = localhost
@port = {{$dotenv PORT}}
@host = {{hostname}}:{{port}}
@contentType = application/json
@authToken = {{login.response.body.token}}

###

# @name checkHealth
GET http://{{host}}/health HTTP/1.1

###

# @name getUsers
GET http://{{host}}/users HTTP/1.1

###
# @prompt userId Id of the user to get

# @name getUser
GET http://{{host}}/users/{{userId}} HTTP/1.1

###
# @prompt email Email of the user
# @prompt password Password of the user

# @name signup
POST http://{{host}}/signup HTTP/1.1
Content-Type: {{contentType}}

{
    "email": "{{email}}",
    "password": "{{password}}"
}

###
# @prompt email Email of the user
# @prompt password Password of the user

# @name login
POST http://{{host}}/login HTTP/1.1
Content-Type: {{contentType}}

{
    "email": "{{email}}",
    "password": "{{password}}"
}

###

# @name getAuthors
GET http://{{host}}/authors HTTP/1.1

###
# @prompt authorId Id of the author to get

# @name getAuthor
GET http://{{host}}/authors/{{authorId}} HTTP/1.1
Authorization: Bearer {{authToken}}

###
# @prompt authorName Name of the author

# @name createAuthor
POST http://{{host}}/authors HTTP/1.1
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "name": "{{authorName}}"
}

###
# @prompt authorId Id of the author to update
# @prompt authorName Updated name of the author

# @name updateAuthor
PUT http://{{host}}/authors/{{authorId}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "name": "{{authorName}}"
}

###
# @prompt authorId Id of the author to delete

# @name deleteAuthor
DELETE http://{{host}}/authors/{{authorId}} HTTP/1.1
Authorization: Bearer {{authToken}}

###

# @name getSongs
GET http://{{host}}/songs HTTP/1.1

###
# @prompt songId Id of the song to get

# @name getSong
GET http://{{host}}/songs/{{songId}} HTTP/1.1
Authorization: Bearer {{authToken}}

###
# @prompt songName Name of the song

# @name createSong
POST http://{{host}}/songs HTTP/1.1
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "name": "{{songName}}"
}

###
# @prompt songId Id of the song to update
# @prompt songName Updated name of the song

# @name updateSong
PUT http://{{host}}/songs/{{songId}} HTTP/1.1
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "name": "{{songName}}"
}

###
# @prompt songId Id of the song to delete

# @name deleteSong
DELETE http://{{host}}/songs/{{songId}} HTTP/1.1
Authorization: Bearer {{authToken}}

###
# @prompt authorId Id of the author to get songs

# @name getSongsByAuthor
GET http://{{host}}/authors/{{authorId}}/songs HTTP/1.1

###
# @prompt authorId Id of the author
# @prompt songId Id of the song

# @name createAuthorSongRelationship
POST http://{{host}}/authors/{{authorId}}/songs/{{songId}} HTTP/1.1
Authorization: Bearer {{authToken}}

###
# @prompt authorId Id of the author
# @prompt songId Id of the song

# @name deleteAuthorSongRelationship
DELETE http://{{host}}/authors/{{authorId}}/songs/{{songId}} HTTP/1.1
Authorization: Bearer {{authToken}}

###

# @name getResourceLocks
GET http://{{host}}/resource-locks HTTP/1.1

###
# @prompt resourceLockId Id of the resource lock to get

# @name getResourceLock
GET http://{{host}}/resource-locks/{{resourceLockId}} HTTP/1.1

###
# @prompt resourceType Type of the resource (author or song)
# @prompt resourceId Id of the resource

# @name createResourceLock
POST http://{{host}}/resource-locks HTTP/1.1
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
    "resource_type": "{{resourceType}}",
    "resource_id": "{{resourceId}}"
}

###
# @prompt resourceLockId Id of the resource lock to delete

# @name deleteResourceLock
DELETE http://{{host}}/resource-locks/{{resourceLockId}} HTTP/1.1
Authorization: Bearer {{authToken}}
